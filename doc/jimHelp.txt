*JIM.txt*             For NVIM v0.5.0             Last change: 2021 October 11

==============================================================================
Table of Contents                                      *JIM-table-of-contents*

  - jim_PDF                                                      |JIM-jim_pdf|
  - jim_HTML                                                    |JIM-jim_html|
  - jim_writing_notes                                  |JIM-jim_writing_notes|
  - hard wrap is friend                              |JIM-hard-wrap-is-friend|
  - Turn off indents                                    |JIM-turn-off-indents|
1. LUA                                                               |JIM-lua|
2. lua3                                                             |JIM-lua3|


# ============================================
PURPOSE:    Render .md, .txt. .R, .Rmd files
USING:      pandoc, latex, knitr ....
Jump to this file:      |jim_knitr_pandoc_latex|
# ============================================

as of \today:  
    *  To mix latex and .md, must go with pdf, either pandoc or knit  
    *  Add r, knitr code to YAML?   then must render as .RMD file
    *  I do not know how to embed latex, produce html or md (github flavor).  

JIM_PDF                                                          *JIM-jim_pdf*

PDF [ignores html, css; also ignores YAML header (pandoc & ::render()]

To create pdf, just about everything works: pandoc, markdown, latex, knitr..

NOTE: .tex uses a .sty which I do not have. USE knitr:: (with TinyTex to locate
and install that .sty file)

TODO: pandoc may think 2nd `%` is both relative directory and file name

!pandoc % -f markdown -o %.pdf

!pandoc % -f markdown  -t latex -H ../chapter_break.tex -V linkcolor:blue -V fontsize=11pt -V geometry:margin=0.3in -o ~/Downloads/print_and_delete/out.pdf
!pandoc % -f markdown  -t latex -H ../chapter_break.tex -V linkcolor:blue -V fontsize=11pt -V geometry:margin=0.3in -o out.pdf 
!pandoc % -f markdown  --pdf-engine xelatex -H chapter_break.tex -V linkcolor:blue -V fontsize=11pt -V geometry:margin=0.3in -o ~/Downloads/print_and_delete/out.pdf

!pandoc --metadata=project:JIM --lua-filter doc/panvimdoc/scripts/skip-blocks.lua --lua-filter doc/panvimdoc/scripts/include-files.lua  -t doc/panvimdoc/scripts/panvimdoc.lua % -o doc/source/jim_knitr_pandoc_latex.txt


JIM_HTML                                                        *JIM-jim_html*

HTML [to produce HTML with pandoc, all latex is IGNORED.]

HTML is pain in ass and HUGE time waste. Pandoc can handle markdown and small
amounts of latex (math) b/c ppl have added filters or other widgets to pandoc.

Avoid experiments: will waste time. If using Latex, its packages, diagrams with
Latex … must go with PDF.


- !pandoc % -f markdown -V linkcolor:blue -V fontsize=11pt -V geometry:margin=0.3in -o out/out.html


-H header<br/>-V or –variable<br/>–pdf-engine=xelatex

_Create pdf from straight txt_ (do not process any markdown)

pandoc balks at processing straight text if it things it sees markdown. If
lucky, !pandoc % -o file.pdf will work.

**BEST** print_me.sh _.txt file; then use browser to print and save as .pdf _.R
- NOPE, Firefox chokes.

JIM_WRITING_NOTES                                      *JIM-jim_writing_notes*

_jim_writing_notes1_

Template for .md


http://www.terminally-incoherent.com/blog/2013/06/17/using-vim-for-writing-prose/

HARD WRAP IS FRIEND                                  *JIM-hard-wrap-is-friend*

a=automatic reformat t=wrap at textwidth

setlocal formatoptions=ant setlocal textwidth=80 setlocal wrapmargin=0 setlocal
foldcolumn=3 "trick, to set left margin

Long parapgarapja l;akdsjf asalkfjas d; asdfk;ladsjf lk;adjf a;lkaf as;l
asdfjl; adsfl;kj d;as fasdj;lkj afds;lkj

TURN OFF INDENTS                                        *JIM-turn-off-indents*

(no c indents)

setlocal noautoindent<br/>setlocal nocindent<br/>setlocal
nosmartindent<br/>setlocal indentexpr=

==============================================================================
1. LUA                                                               *JIM-lua*

!pandoc --metadata=project:JIM --lua-filter doc/panvimdoc/scripts/skip-blocks.lua --lua-filter doc/panvimdoc/scripts/include-files.lua  -t doc/panvimdoc/scripts/panvimdoc.lua % -o doc/jimlua.txt

JIM’s LUA help notes

_lua_

In lua, nil or false evaluate to: false 0 or ’’, evaluate to: true

_lua2_

The contents of this cheatsheet should be stored at
`~/.config/nvim/plugged/vim-myhelp/doc/myhelp.txt`

==============================================================================
2. lua3                                                             *JIM-lua3*

bottom

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
