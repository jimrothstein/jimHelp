jimVimNotes.txt                                       25  SEP 2021

DO NOT DELETE

===============================================================================
CONTENTS

	1. Reloading your vim configuration.....................|myhelp-config-reload|
	2. Hotkeys....................................................|myhelp-hotkeys|
	3. Searching................................................|myhelp-searching|
	4. This cheatsheet.........................................|myhelp-cheatsheet|
        5. Split Window...........................................|jim_split|

===============================================================================
1. Reloading your vim configuration                       *myhelp-config-reload*

   - :so % : Reloads your vim configuration while editing.

===============================================================================

====
USAGE:     :h jimVimNotes  " Opens this file as read-only HELP file


HELPTAGS and Ctags are NOT related (do not confuse).

For helptags:
MUST use *.txt
MUST put in /doc folder of a plugin, here:  jimHelp/

To change file:  edit this file as regular file.
Dislike Highighting?   :set syntax=off
Add a tag:     surround new tag with * ; plus prose to describe tag
Add a hotlink:   ONLY in same file (I think) surround new tag with |

Run :helptags ALL to regenerate file called tags
/doc file (singular) :  should see this .txt file and tags file

restart vim
:h jimVimNotes
====

Tags in this file:
|jimVert|
|jim_vim_help|
|jim_common_tasks|
|jim_system_stuff|

To remove highlighting:   set syntax=off

*jimVert*

Following sets things up:
* open .R file
* start R (should be bottom)
* :vert h    (open help on right)

:h windows.txt
:h vert
:h splitright


:h new   " open new WINDOW
:h enew  " new buffer, in current window

*jim_system_stuff*
:view $VIMRUNTIME
:view $TEMPLATES

*jim_auto_commands*
:h autocmd
:h au


*jim_vim_help*

as of \today:  
    *  To mix latex and .md, must go with pdf, either pandoc or knit  
    *  Add r, knitr code to YAML?   then must render as .RMD file
    *  I do not know how to embed latex, produce html or md (github flavor).  

 ===    
  PDF   [ignores html, css; also ignores YAML header (pandoc & ::render()]
 ===  

  NOTE:   .tex uses a .sty which I do not have.  USE  knitr:: (with TinyTex
  to locate and install that .sty file)  

TODO: pandoc may think 2nd `%` is both relative directory and file name

!pandoc % -f markdown -o %.pdf

!pandoc % -f markdown  -t latex -H ../chapter_break.tex -V linkcolor:blue -V fontsize=11pt -V geometry:margin=0.3in -o ~/Downloads/print_and_delete/out.pdf
!pandoc % -f markdown  -t latex -H ../chapter_break.tex -V linkcolor:blue -V fontsize=11pt -V geometry:margin=0.3in -o out.pdf 
!pandoc % -f markdown  --pdf-engine xelatex -H chapter_break.tex -V linkcolor:blue -V fontsize=11pt -V geometry:margin=0.3in -o ~/Downloads/print_and_delete/out.pdf


 ====  
  HTML [ignores latex]  
 ====    

  *  !pandoc % -f markdown -V linkcolor:blue -V fontsize=11pt -V geometry:margin=0.3in -o out/out.html 




[all docs files](~/docs/)
[code files](~/code/)

*jim_freq_help*
**Help files**
:h abbreviation


:h help-summary
:h helphelp
:h help.txt
:h helpgrep
:h usr_toc.txt



:h startup
:h cmdline 
:h exe    (use cmd line to run normal cmds?)
:h startinsert


*jim_common_tasks*
####  Help for common tasks
:h :abbreviate
:h :augroup
:h :changes
:h :highlight
:h :syntax
:h :command
:h :file
:h :filetype
:h :messages
:h :options  :h options.txt  :h :set

:h :scriptnames


*jim_split*
:h :split
:vert help    " open help in vertical split



vim:tw=78:ts=8:ft=help:
